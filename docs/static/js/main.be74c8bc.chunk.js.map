{"version":3,"sources":["assets/pokeballs/pokeball.svg","components/HeaderComponent/HeaderComponent.js","components/LoadingComponent/LoadingComponent.js","components/PokemonCardComponent/PokemonCardComponent.js","components/ModalComponent/ModalComponent.js","constants/constants.js","services/PokemonService.js","components/PokemonDetailsComponent/PokemonDetailsComponent.js","components/PokemonListComponent/PokemonListComponent.js","views/home/HomeView.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","languages","initialLanguage","change","className","src","pokeball","alt","value","onChange","target","map","language","name","LoadingComponent","PokemonCardComponent","pokemon","showDetail","onClick","e","preventDefault","image_dream_world","image_default","ModalComponent","show","close","title","children","stopPropagation","API_BASEPATH","process","CANT_PAGES","Math","floor","CANT_POKEMONS","getPokemon","url","a","fetch","then","res","json","urlSpecie","id","specie","console","log","getLanguages","getPokemonPage","limit","offset","getStatDetail","PokemonDetailsComponent","useState","stats","setStats","loading","setLoading","useEffect","promises","defaultStat","forEach","base_stat","stat","langugeName","push","Promise","all","result","data","nameFounded","names","find","element","replace","PokemonListComponent","page","setPage","pokemonList","setPokemonList","setShow","pokemonSelected","setPokemonSelected","isMounted","OFFSET","pokemons","results","sprites","front_default","other","dream_world","types","type","showPokemonDetail","React","memo","HomeView","setLanguages","languageSelected","setLanguageSelected","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be74c8bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeball.b2fd87ff.svg\";","import React from 'react';\nimport pokeball from '../../assets/pokeballs/pokeball.svg'\n\nimport './HeaderComponent.scss';\n\nconst HeaderComponent = ({ languages, initialLanguage, change }) => {\n  const handleChange = ({ target }) => {\n    change(target.value)\n  }\n  \n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"header__title\">\n          <img src={ pokeball } alt='pokeball'></img>\n          <h2>POKEDEX</h2>\n        </div>\n        <div className=\"header__language\">\n          <select\n            value={initialLanguage}\n            onChange={ handleChange }\n          >\n            {\n              languages.map((language) => (\n                <option \n                  key={language.name} \n                  value={language.name}\n                > \n                  { language.name } \n                </option>\n              ))\n            }\n          </select>\n        </div>\n      </div>\n      {/* <div className=\"sub-header\"></div> */}\n    </>\n  )\n}\n\nexport default HeaderComponent;","import React from 'react';\nimport './LoadingComponent.scss';\n\nconst LoadingComponent = () => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"spinner__half\"></div>\n    </div>\n  )\n}\n\nexport default LoadingComponent;","import React from 'react'\nimport './PokemonCardComponent.scss'\n\nconst PokemonCardComponent = ({ pokemon, showDetail }) => {\n  const handlerClikCard = (e) => {\n    e.preventDefault();\n    showDetail(pokemon)\n  }\n\n  return (\n    <div className=\"card-container\" onClick={handlerClikCard}>\n      <div className=\"card-container__image\">\n        <img src={pokemon.image_dream_world ? pokemon.image_dream_world : pokemon.image_default} alt={pokemon.name}></img>\n      </div>\n      <div className=\"card-container__description\">\n        <div className=\"card-container__description__title\">\n          <h2><strong>{pokemon.name}</strong></h2>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCardComponent;\n","import React from 'react';\nimport './ModalComponent.scss';\n\nconst ModalComponent = ({ show, close, title = '', children = null }) => {\n  return (\n    <>\n    {\n      show &&\n      <div className=\"modal\" onClick={close}>\n        <div className=\"modal__content\" onClick={e => e.stopPropagation()}>\n          <div onClick={close} className=\"modal__content__close-btn\">\n            X\n          </div>\n          <div className=\"modal__content__body\">\n            {children}\n          </div>\n        </div>\n      </div>\n    }\n    </>\n  )\n}\n\nexport default ModalComponent;","export const API_BASEPATH = process.env.REACT_APP_API_ENDPOINT;\n\nexport const CANT_POKEMONS = 898;\n\nexport const PAGINATION = 5;\n\nexport const CANT_PAGES = Math.floor(CANT_POKEMONS / PAGINATION);\n\nexport const INITIAL_LANGUAGE = 'es';","import { API_BASEPATH } from \"../constants/constants\";\n\nexport const getPokemon = async (url) => {\n  try {\n    let pokemon = await fetch(url).then((res) => res.json());\n    const urlSpecie = API_BASEPATH + 'pokemon-species/' + pokemon.id ;\n    let specie  = await fetch(urlSpecie).then((res) => res.json());\n    return { ...pokemon, ...specie };\n  } catch (err) {\n    // Si tenemos un interceptor no debería llegar acá y se podría manejar el error por ahí.\n    // Sino se podria propagar el error al componente y realizar algún manejo ahí mismo o manejarlo acá.\n    console.log(err);\n  }\n}\n\nexport const getLanguages = async () => {\n  try {\n    const url = API_BASEPATH + 'language';\n    return await fetch(url).then((res) => res.json());\n  } catch (err) {\n    // Si tenemos un interceptor no debería llegar acá y se podría manejar el error por ahí.\n    // Sino se podria propagar el error al componente y realizar algún manejo ahí mismo o manejarlo acá.\n    console.log(err);\n  }\n}\n\nexport const getPokemonPage = async (limit, offset) => {\n  try {\n    const url = API_BASEPATH + `pokemon?limit=${limit}&offset=${offset}`;\n    return await fetch(url).then((res) => res.json());\n  } catch (err) {\n    // Si tenemos un interceptor no debería llegar acá y se podría manejar el error por ahí.\n    // Sino se podria propagar el error al componente y realizar algún manejo ahí mismo o manejarlo acá.\n    console.log(err);\n  }\n}\n\nexport const getStatDetail = async (url) => {\n  try {\n    return await fetch(url).then((res) => res.json());\n  } catch (err) {\n    // Si tenemos un interceptor no debería llegar acá y se podría manejar el error por ahí.\n    // Sino se podria propagar el error al componente y realizar algún manejo ahí mismo o manejarlo acá.\n    console.log(err);\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport './PokemonDetailsComponent.scss';\nimport { getStatDetail } from \"../../services/PokemonService\";\nimport LoadingComponent from '../LoadingComponent/LoadingComponent';\n\nconst PokemonDetailsComponent = ({pokemon, language}) => {\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const promises = [];\n    let defaultStat = {};\n\n    pokemon.stats.forEach(({ base_stat, stat }) => {\n      defaultStat[stat.name] = {\n        name: stat.name,\n        langugeName: stat.name,\n        value: base_stat\n      };\n      promises.push(getStatDetail(stat.url));\n    });\n      \n    Promise.all(promises).then((result) => {\n      const stats = result.map((data) => {\n        const nameFounded = data.names.find(element => element.language.name === language)\n        const name = nameFounded ? nameFounded.name : data.name;\n        \n        defaultStat[data.name] = {...defaultStat[data.name], name: name};\n        return defaultStat[data.name];\n      });\n      setStats(stats);\n      setLoading(false);\n    });\n\n  }, [pokemon, language])\n\n  const deleteMiddleDash = (name) => {\n    return name.replace('-', ' ')\n  }\n\n  return (\n    <>\n      {\n        loading ?\n          <LoadingComponent></LoadingComponent>\n        :\n          <div className=\"pokemon-details\">\n            <div className=\"pokemon-details__header\"></div>\n            <div className=\"image\">\n              <img \n                src={pokemon.image_dream_world ? pokemon.image_dream_world : pokemon.image_default} \n                alt={\"alt-\" + pokemon.name}>\n              </img>\n            </div>\n            <div className=\"pokemon-details__content\">\n              <div>\n                <h1 className=\"pokemon-details__content__title\">{pokemon.name}</h1>\n              </div>\n              <div className=\"pokemon-details__content__stats\">\n                {\n                  stats.map((stat) => (\n                    <div key={stat.name} className=\"pokemon-details__content__stats__stat\">\n                      <span className=\"pokemon-details__content__stats__stat__value\">{stat.value}</span>\n                      <span className=\"pokemon-details__content__stats__stat__name\"><strong>{deleteMiddleDash(stat.name)}</strong> </span>\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n      }\n    </>\n  )\n}\n\nexport default PokemonDetailsComponent;","import React, { useEffect, useState } from 'react'\n\nimport PokemonCardComponent from '../PokemonCardComponent/PokemonCardComponent';\nimport ModalComponent from '../ModalComponent/ModalComponent';\nimport PokemonDetailsComponent from '../PokemonDetailsComponent/PokemonDetailsComponent';\nimport LoadingComponent from '../LoadingComponent/LoadingComponent';\n\nimport { getPokemon, getPokemonPage } from '../../services/PokemonService';\n\nimport { CANT_PAGES, PAGINATION, CANT_POKEMONS } from '../../constants/constants';\n\nimport './PokemonListComponent.scss';\n\nconst PokemonListComponent = ( { language }) => {\n  const [page, setPage] = useState(0);\n  const [pokemonList, setPokemonList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [pokemonSelected, setPokemonSelected] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    let isMounted = true;\n    const promises = [];\n    const OFFSET = page * 5;\n    const PAG = OFFSET + 5 <= CANT_POKEMONS ? PAGINATION : CANT_POKEMONS - OFFSET;\n\n    getPokemonPage(PAG, OFFSET).then(({ results: pokemons }) => {\n      if (pokemons) {\n        pokemons.forEach( ({ url }) => {          \n          promises.push(getPokemon(url));\n        });\n\n        Promise.all(promises).then((result) => {\n          const pokemons = result.map((data) => {\n            const nameFounded = data.names.find(element => element.language.name === language)\n            const name = nameFounded ? nameFounded.name : data.name;\n\n            return {\n              id: data.id,\n              name: name,\n              image_default: data.sprites.front_default,\n              image_dream_world: data.sprites.other.dream_world.front_default,\n              types: data.types.map((type) => type.type.name),\n              stats: data.stats\n            }\n          });\n          if (isMounted) {\n            setPokemonList(pokemons);\n            setLoading(false);\n          }\n        });\n      }\n    });\n\n    return () => { isMounted = false };\n  }, [page, language])\n\n  const closeModalHandler = () => setShow(false);\n\n  const showPokemonDetail = (pokemon) => {\n    setPokemonSelected(pokemon);\n    setShow(true);\n  }\n\n  return (\n    <div className=\"pokemon-list\">\n      {\n        loading ? <LoadingComponent></LoadingComponent> :\n        <>\n          <div className=\"pokemon-list__items\">\n            {\n              pokemonList.map((pokemon) => (\n                <PokemonCardComponent \n                  key={pokemon.id} \n                  pokemon={pokemon}\n                  showDetail={showPokemonDetail}>\n                </PokemonCardComponent>\n              ))\n            }\n          </div>\n          <div className= \"pokemon-list__actions\">\n            {\n              page > 0 &&\n              <button \n                onClick={() => setPage(page - 1)} \n                className='primary-button'>\n                  {'< Atrás'}\n              </button>\n            }\n            {\n              page < CANT_PAGES &&\n              <button \n                onClick={() => setPage(page + 1)} \n                className='primary-button'>\n                  {'Siguiente >'}\n              </button>\n            }\n          </div>\n        </>\n      }\n\n      <ModalComponent title=\"Detalles del pokemon\" show={show} close={closeModalHandler}>\n        { show && pokemonSelected && \n          <PokemonDetailsComponent pokemon={pokemonSelected} language={language}></PokemonDetailsComponent>\n        }\n      </ModalComponent>\n    </div>\n  )\n}\n\nexport default React.memo(PokemonListComponent);","import React, { useEffect, useState } from 'react';\nimport HeaderComponent from '../../components/HeaderComponent/HeaderComponent';\nimport LoadingComponent from '../../components/LoadingComponent/LoadingComponent';\nimport PokemonListComponent from '../../components/PokemonListComponent/PokemonListComponent';\nimport { getLanguages } from '../../services/PokemonService';\n\nimport './HomeView.scss'\n\nconst HomeView = () => {\n  const [languages, setLanguages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [languageSelected, setLanguageSelected] = useState('es');\n\n  useEffect(() => {\n    setLoading(true);\n    getLanguages().then(({ results }) => {\n      if (results) {\n        setLanguages(results);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      {\n        loading ? \n          <LoadingComponent></LoadingComponent>\n        :\n        <>\n          <HeaderComponent \n            languages = { languages } \n            initialLanguage = { languageSelected } \n            change = { setLanguageSelected }>\n          </HeaderComponent>\n          <PokemonListComponent language={ languageSelected } ></PokemonListComponent>\n        </>\n      }\n    </>\n  )\n};\n\nexport default HomeView;\n","import HomeView from './views/home/HomeView';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <>\n      <HomeView></HomeView>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}